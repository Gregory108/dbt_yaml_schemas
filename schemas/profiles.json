{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://gitcdn.xyz/repo/fivetran/dbt_yaml_schemas/main/schemas/profiles.json",
  "title": "profiles.yml",
  "description": "Contains configuration for connecting dbt to your destination. See https://docs.getdbt.com/reference/profiles.yml.",
  "type": "object",
  "additionalProperties": false,
  "patternProperties": {
    "config": {
      "type": "object",
      "additionalProperties": false,
      "description": "Contains not database specific options.",
      "properties": {
        "partial_parse": {
          "type": "boolean",
          "description": "Partial parsing can improve the performance characteristics of dbt runs by limiting the number of files that are parsed by dbt.\nSee https://docs.getdbt.com/reference/profiles.yml#partial_parse.\nDefault: false."
        },

        "use_colors": {
          "type": "boolean",
          "description": "By default, dbt will colorize the output it prints in your terminal. You can turn this on and off using this option.\nDefault: true."
        },

        "printer_width": {
          "type": "integer",
          "description": "By default, dbt will print out lines padded to 80 characters wide. You can change it using this option."
        },

        "send_anonymous_usage_stats": {
          "type": "boolean",
          "description": "Whether to send anonymous usage statistics or not.\nDefault: true."
        }
      }
    },
    ".*": {
      "description": "The name of the profile. Contains all the details required to connect to your data warehouse. sure that this is the same name as the profile indicated in your dbt_project.yml file.",
      "additionalProperties": false,
      "properties": {
        "target": {
          "type": "string",
          "description": "This is the default target your dbt project will use. It must be one of the targets you define in your profile. Commonly it is set to dev."
        },
        "outputs": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "oneOf": [
                { "$ref": "#definitions/postgresProfile" },
                { "$ref": "#definitions/redshiftProfile" },
                { "$ref": "#definitions/bigQueryProfile" },
                { "$ref": "#definitions/snowflakeProfile" },
                { "$ref": "#definitions/sparkProfile" },
                { "$ref": "#definitions/prestoProfile" }
              ]
            },
            "required": [".*"]
          }
        }
      },
      "required": ["target", "outputs"]
    }
  },
  "definitions": {
    "postgresProfile": {
      "type": "object",
      "allOf": [
        { "$ref": "#definitions/common" },
        { "$ref": "#definitions/passwordField" },
        { "$ref": "#definitions/keepalivesIdleField" }
      ],
      "properties": {
        "type": {
          "const": "postgres",
          "description": "Postgres Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/postgres-profile"
        },
        "search_path": {
          "type": "string",
          "description": "Controls the Postgres \"search path\" that dbt configures when opening new connections to the database. By default, the Postgres search path is \"$user, public\", meaning that unqualified table names will be searched for in the public schema, or a schema with the same name as the logged-in user. Note: Setting the search_path to a custom value is not necessary or recommended for typical usage of dbt."
        },
        "role": {
          "type": "string",
          "description": "Controls the Postgres role that dbt assumes when opening new connections to the database."
        },
        "sslmode": {
          "type": "string",
          "description": "Controls how dbt connectes to Postgres databases using SSL. See the Postgres docs on sslmode for usage information. When unset, dbt will connect to databases using the Postgres default, prefer, as the sslmode."
        }
      }
    },
    "redshiftProfile": {
      "type": "object",
      "allOf": [
        { "$ref": "#definitions/common" },
        { "$ref": "#definitions/keepalivesIdleField" }
      ],
      "properties": {
        "type": {
          "const": "redshift",
          "description": "Redshift Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/redshift-profile"
        },
        "search_path": {
          "type": "string",
          "default": "public"
        },
        "sslmode": {
          "type": "string",
          "description": "Sets the sslmode used to connect to the database (in case this parameter is set, will look for ca in ~/.postgresql/root.crt)"
        }
      },
      "if": {
        "required": ["method"],
        "properties": { "method": { "const": "iam" } }
      },
      "then": {
        "properties": {
          "cluster_id": {
            "type": "string"
          },
          "iam_profile": {
            "type": "string",
            "description": "When value is set, dbt will use the specified profile from your ~/.aws/config file instead of using the profile name default."
          },
          "iam_duration_seconds": {
            "type": "integer"
          },
          "autocreate": {
            "type": "boolean"
          },
          "db_groups": {
            "type": "array"
          }
        },
        "required": ["cluster_id"]
      },
      "else": {
        "allOf": [{ "$ref": "#definitions/passwordField" }],
        "properties": {
          "postal_code": { "pattern": "[A-Z][0-9][A-Z] [0-9][A-Z][0-9]" }
        }
      }
    },
    "bigQueryProfile": {
      "type": "object",
      "allOf": [{ "$ref": "#definitions/threadsField" }],
      "properties": {
        "type": {
          "const": "bigquery",
          "description": "BigQuery Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/bigquery-profile"
        },
        "project": {
          "type": "string",
          "description": "GCP project id"
        },
        "dataset": {
          "type": "string",
          "description": "The name of your dbt dataset"
        },
        "timeout_seconds": {
          "type": "integer",
          "default": 300,
          "description": "BigQuery supports query timeouts. By default, the timeout is set to 300 seconds. If a dbt model takes longer than this timeout to complete, then BigQuery may cancel the query."
        },
        "priority": {
          "type": "string",
          "enum": ["batch", "interactive"],
          "description": "The priority for the BigQuery jobs that dbt executes can be configured with the priority configuration in your BigQuery profile. This field can be set to one of batch or interactive. For more information on query priority, consult the BigQuery documentation."
        }
      },
      "required": [
        "type",
        "method",
        "project",
        "dataset",
        "timeout_seconds",
        "priority"
      ],
      "oneOf": [
        {
          "$comment": "https://docs.getdbt.com/reference/warehouse-profiles/bigquery-profile#oauth-via-gcloud",
          "allOf": [
            { "$ref": "#definitions/retriesField" },
            { "$ref": "#definitions/locationField" }
          ],
          "properties": {
            "method": { "const": "oauth" },
            "maximum_bytes_billed": {
              "type": "integer"
            },
            "impersonate_service_account": {
              "type": "string"
            }
          },
          "required": ["retries"]
        },
        {
          "$comment": "https://docs.getdbt.com/reference/warehouse-profiles/bigquery-profile#oauth-token-based",
          "type": "object",
          "allOf": [
            { "$ref": "#definitions/retriesField" },
            { "$ref": "#definitions/locationField" }
          ],
          "properties": {
            "method": { "const": "oauth-secrets" }
          },
          "required": ["retries"],
          "oneOf": [
            {
              "properties": {
                "refresh_token": {
                  "type": "string",
                  "description": "Using the refresh token and client information, dbt will mint new access tokens as necessary."
                },
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                },
                "token_uri": {
                  "type": "string"
                }
              },
              "required": [
                "refresh_token",
                "client_id",
                "client_secret",
                "token_uri"
              ]
            },
            {
              "properties": {
                "token": {
                  "type": "string",
                  "description": "dbt will use the one-time access token, no questions asked. This approach makes sense if you have an external deployment process that can mint new access tokens and update the profile file accordingly."
                }
              },
              "required": ["token"]
            }
          ]
        },
        {
          "$comment": "https://docs.getdbt.com/reference/warehouse-profiles/bigquery-profile#service-account-file",
          "type": "object",
          "allOf": [{ "$ref": "#definitions/retriesField" }],
          "properties": {
            "method": { "const": "service-account" },
            "keyfile": {
              "type": "string",
              "description": "/path/to/bigquery/keyfile.json"
            }
          },
          "required": ["keyfile", "retries"]
        },
        {
          "$comment": "https://docs.getdbt.com/reference/warehouse-profiles/bigquery-profile#service-account-json",
          "type": "object",
          "properties": {
            "method": { "const": "service-account-json" },
            "keyfile_json": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "project_id": {
                  "type": "string"
                },
                "private_key_id": {
                  "type": "string"
                },
                "private_key": {
                  "type": "string"
                },
                "client_email": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "auth_uri": {
                  "type": "string"
                },
                "token_uri": {
                  "type": "string"
                },
                "auth_provider_x509_cert_url": {
                  "type": "string"
                },
                "client_x509_cert_url": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "project_id",
                "private_key_id",
                "private_key",
                "client_email",
                "client_id",
                "auth_uri",
                "token_uri",
                "auth_provider_x509_cert_url",
                "client_x509_cert_url"
              ]
            }
          },
          "required": ["keyfile_json"]
        }
      ]
    },
    "snowflakeProfile": {
      "type": "object",
      "allOf": [{ "$ref": "#definitions/threadsField" }],
      "properties": {
        "type": {
          "const": "snowflake",
          "description": "Snowflake Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/snowflake-profile"
        },
        "account": {
          "type": "string",
          "description": "The account to connect to as per Snowflake's documentation."
        },
        "user": {
          "type": "string",
          "description": "The user to log in as."
        },
        "role": {
          "type": "string",
          "description": "The role to assume when running queries as the specified user."
        },
        "database": {
          "$ref": "#definitions/database"
        },
        "warehouse": {
          "type": "string",
          "description": "The warehouse to use when building models."
        },
        "schema": {
          "type": "string",
          "description": "The schema to build models into by default. Can be overridden with custom schemas."
        },
        "client_session_keep_alive": {
          "type": "boolean",
          "default": false,
          "description": "If provided, issue a periodic select statement to keep the connection open when particularly long-running queries are executing (> 4 hours). Default: False (see note below)."
        },
        "query_tag": {
          "type": "string",
          "description": "A value with which to tag all queries, for later searching in QUERY_HISTORY view."
        }
      },
      "required": [
        "type",
        "account",
        "user",
        "database",
        "warehouse",
        "schema",
        "query_tag"
      ],
      "oneOf": [
        { "$ref": "#definitions/passwordField" },
        {
          "properties": {
            "private_key_path": {
              "type": "string",
              "description": "path/to/private.key"
            },
            "private_key_passphrase": {
              "type": "string",
              "description": "passphrase for the private key, if key is encrypted"
            }
          },
          "required": ["private_key_path", "private_key_passphrase"]
        },
        {
          "properties": {
            "authenticator": {
              "type": "string",
              "description": "Can be one of 'externalbrowser' or a valid Okta URL."
            }
          },
          "required": ["authenticator"]
        }
      ]
    },
    "sparkProfile": {
      "type": "object",
      "properties": {
        "type": {
          "const": "spark",
          "description": "Apache Spark Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/spark-profile"
        },
        "schema": {
          "type": "string",
          "description": "The schema to build models into."
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "user": {
          "type": "string"
        }
      },
      "required": ["type", "schema", "host", "port", "user"],
      "oneOf": [
        {
          "properties": {
            "method": {
              "const": "odbc",
              "description": "Use the odbc connection method if you are connecting to a Databricks SQL endpoint or interactive cluster via ODBC driver."
            },
            "driver": {
              "type": "string",
              "description": "path/to/driver"
            },
            "organization": {
              "type": "string",
              "description": "Organization id. Used for Azure Databricks only."
            },
            "token": {
              "type": "string"
            }
          },
          "required": ["method", "driver", "organization", "token"],
          "oneOf": [
            {
              "properties": {
                "endpoint": { "type": "string" }
              },
              "required": ["endpoint"]
            },
            {
              "properties": {
                "cluster": { "type": "string" }
              },
              "required": ["cluster"]
            }
          ]
        },
        {
          "properties": {
            "method": {
              "const": "thrift",
              "description": "Use the thrift connection method if you are connecting to a Thrift server sitting in front of a Spark cluster, e.g. a cluster running locally or on Amazon EMR."
            },
            "auth": {
              "type": "string"
            },
            "kerberos_service_name": {
              "type": "string"
            }
          },
          "required": ["method", "auth", "kerberos_service_name"]
        },
        {
          "properties": {
            "method": {
              "const": "http",
              "description": "Use the http method if your Spark provider supports generic connections over HTTP (e.g. Databricks interactive cluster)."
            },
            "organization": {
              "type": "string",
              "description": "Organization id. Used for Azure Databricks only."
            },
            "token": {
              "type": "string"
            },
            "cluster": {
              "type": "string"
            },
            "connect_timeout": {
              "type": "integer",
              "description": "Databricks interactive clusters can take several minutes to start up. You may include the optional profile configs connect_timeout and connect_retries, and dbt will periodically retry the connection."
            },
            "connect_retries": {
              "type": "integer",
              "description": "Databricks interactive clusters can take several minutes to start up. You may include the optional profile configs connect_timeout and connect_retries, and dbt will periodically retry the connection."
            }
          },
          "required": ["method", "organization", "token", "cluster"]
        }
      ]
    },
    "prestoProfile": {
      "type": "object",
      "allOf": [
        { "$ref": "#definitions/passwordField" },
        { "$ref": "#definitions/threadsField" }
      ],
      "properties": {
        "type": {
          "const": "presto",
          "description": "Presto Profile.\nhttps://docs.getdbt.com/reference/warehouse-profiles/presto-profile"
        },
        "method": {
          "enum": ["none", "ldap", "kerberos"]
        },
        "user": {
          "type": "string"
        },
        "database": {
          "$ref": "#definitions/database"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "schema": {
          "type": "string",
          "description": "The schema to build models into."
        }
      },
      "required": [
        "type",
        "user",
        "password",
        "database",
        "host",
        "port",
        "schema"
      ]
    },
    "common": {
      "type": "object",
      "allOf": [{ "$ref": "#definitions/threadsField" }],
      "properties": {
        "host": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "dbname": {
          "type": "string"
        },
        "schema": {
          "type": "string",
          "description": "The default schema that dbt will build objects in."
        }
      },
      "required": ["type", "host", "user", "port", "dbname", "schema"]
    },
    "passwordField": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      },
      "required": ["password"]
    },
    "keepalivesIdleField": {
      "type": "object",
      "properties": {
        "keepalives_idle": {
          "type": "integer",
          "default": 0
        }
      },
      "required": ["keepalives_idle"]
    },
    "threadsField": {
      "type": "object",
      "properties": {
        "threads": {
          "type": "integer",
          "default": 1,
          "description": "The number of threads the dbt project will run on."
        }
      }
    },
    "retriesField": {
      "type": "object",
      "properties": {
        "retries": {
          "type": "integer",
          "description": "The number of times dbt should retry queries that result in unhandled server errors."
        }
      }
    },
    "locationField": {
      "type": "object",
      "properties": {
        "location": {
          "anyOf": [{ "const": "US" }, { "const": "EU" }, { "type": "string" }],
          "description": "The location of BigQuery datasets can be configured using the location configuration in a BigQuery profile. location may be iether a multi-regional location (e.g. EU, US), or a regional location (e.g. us-west2) as per the the BigQuery documentation describes."
        }
      }
    },
    "database": {
      "type": "string",
      "description": "The database that dbt should create models in."
    }
  }
}
